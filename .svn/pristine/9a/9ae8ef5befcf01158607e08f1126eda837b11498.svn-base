package com.oo115.myapplication.ForgotPassword;


import android.content.DialogInterface;
import android.os.Build;
import android.os.Bundle;
import android.util.Log;
import android.util.Patterns;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.TextView;

import com.oo115.myapplication.PrefConFig;
import com.oo115.myapplication.R;
import com.oo115.myapplication.retrofitAPI.ApiClient;
import com.oo115.myapplication.retrofitAPI.ApiInterface;

import java.util.Objects;
import java.util.Random;

import androidx.annotation.RequiresApi;
import androidx.appcompat.app.AlertDialog;
import androidx.fragment.app.Fragment;
import retrofit2.Call;
import retrofit2.Callback;
import retrofit2.Response;


/**
 * A simple {@link Fragment} subclass.
 */
public class FogotPasswordFragment extends Fragment {

    EditText email_address;
    TextView responseMsg;
    Button confrim_emailBtn;
    String user_email = "empty";

    public static PrefConFig prefConFig;
    public static ApiInterface apiInterface;

    public FogotPasswordFragment() {
        // Required empty public constructor
    }


    @Override
    public View onCreateView(LayoutInflater inflater, ViewGroup container,
                             Bundle savedInstanceState) {
        // Inflate the layout for this fragment
        View view = inflater.inflate(R.layout.fragment_forgot_password, container, false);

        confrim_emailBtn = view.findViewById(R.id.forgotPassword_emailConfirmBtn);
        email_address = view.findViewById(R.id.forgotPassword_emailET);
        responseMsg = view.findViewById(R.id.forgotPassword_responseMsg);
        prefConFig = new PrefConFig(Objects.requireNonNull(getActivity()));

        apiInterface = ApiClient.getApiClient().create(ApiInterface.class);


        confrim_emailBtn.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {


                user_email = email_address.getText().toString();

                if (!Patterns.EMAIL_ADDRESS.matcher(user_email).matches()) {
                    email_address.setError("Enter a valid email");
                    email_address.requestFocus();
                }
                //this call searches the databse to see if the user email is valid
                Call<ForgotEmailDB> call = apiInterface.performEmailSearch(user_email);

                call.enqueue(new Callback<ForgotEmailDB>() {
                    @RequiresApi(api = Build.VERSION_CODES.N)
                    @Override
                    public void onResponse(Call<ForgotEmailDB> call, Response<ForgotEmailDB> response) {

                        //creating a random string to set as the users password
                        int leftLimit = 48; // numeral '0'
                        int rightLimit = 122; // letter 'z'
                        int targetStringLength = 10;
                        Random random = new Random();

                        //generating a random password string
                        String generatedString = random.ints(leftLimit, rightLimit + 1)
                                .filter(i -> (i <= 57 || i >= 65) && (i <= 90 || i >= 97))
                                .limit(targetStringLength)
                                .collect(StringBuilder::new, StringBuilder::appendCodePoint, StringBuilder::append)
                                .toString();

                        responseMsg.setText(user_email);


                        //if the user exists in the database then execute
                        if (response.body().getResponse().equals("exists")) {
                            prefConFig.writeEmail(user_email);


                            //alert asking the user to confirm their password reset
                            new AlertDialog.Builder(getContext())
                                    .setIcon(android.R.drawable.ic_dialog_alert)
                                    .setTitle("logging out")
                                    .setMessage("Clicking yes will reset your password, are you sure you want to continue?")
                                    .setPositiveButton("Yes", new DialogInterface.OnClickListener() {
                                        @Override
                                        public void onClick(DialogInterface dialog, int which) {

                                            new Thread(new Runnable() {
                                                //                                Itâ€™s also important to send email in a separate Thread to avoid NetworkOnMainException.
                                                @Override
                                                public void run() {
                                                    try {
                                                        //sending an email to the user with their new password
                                                        GMailSender sender = new GMailSender("totalfitnessapplication@gmail.com",
                                                                "uniProject");
                                                        sender.sendMail("Password Reset", generatedString, "totalfitnessapplication@gmail.com", user_email);
                                                    } catch (Exception e) {
                                                        Log.e("SendMail", e.getMessage(), e);
                                                    }
                                                }

                                            }).start();

                                        }

                                    })
                                    .setNegativeButton("No", null)
                                    .show();

                            responseMsg.setText("An Email has been sent to your email address");

                        } else if (response.body().getResponse().equals("email doesn't exist")) {
                            responseMsg.setText("Invalid Email address");

                        }
                    }

                    @Override
                    public void onFailure(Call<ForgotEmailDB> call, Throwable t) {

                    }
                });
            }
        });


        return view;
    }

}
